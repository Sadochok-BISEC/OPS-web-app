import numpy as np
from scipy.optimize import linprog

# C = 20 * x1 + 40 * x2
#
# A1 = 22 * x1 + 44 * x2
#
# A2 = 18 * x1 + 36 * x2
#
# 0.6 * (x1 + x2) <= x1
# 0.4 * (x1 + x2) <= x2
# 2 * x1 + 4 * x2 <= 100
# x1, x2 >= 0

def simplex_maximize(c, A_ub, b_ub, bounds):
    res = linprog(c, A_ub=A_ub, b_ub=b_ub, bounds=bounds, method='simplex')
    return res

# Цены продукции П1 и П2
c = [-20, -40]

# Ограничения по объему сбыта продукции П1 и П2
A_ub = [[-0.4, -0.6], [0.6, -1], [2, 4]]
b_ub = [-0, 0, 100]

# Ограничения по знаку переменных x1,x2>=0
x1_bounds = (0, None)
x2_bounds = (0, None)
bounds = [x1_bounds, x2_bounds]

# Решение задачи
res = simplex_maximize(c, A_ub, b_ub, bounds)
x1_optimal = res.x[0]
x2_optimal = res.x[1]

print("Оптимальное распределение сырья:")
print("П1:", x1_optimal, "кг")
print("П2:", x2_optimal, "кг")
#print(res)

# Находим число изготавливаемых видов продукции
num_of_products = len([x for x in res.x if x > 0])
print("Число изготавливаемых видов продукции: ", num_of_products)

# A) Изменение плана выпуска и выручки от продажи при изменении цены на 10%(увеличение)
a_new = [-22, -44]
a_res_new = simplex_maximize(a_new, A_ub, b_ub, bounds)

print("\nИзменение плана выпуска и выручки от продажи при изменении цены на 10%:")
print("План выпуска П1 =", a_res_new.x[0])
print("План выпуска П2 =", a_res_new.x[1])
print("Выручка от продажи =", -a_res_new.fun)

# A.2) Изменение плана выпуска и выручки от продажи при изменении цены на 10%(снижение)
a2_new = [-18, -36]
a2_res_new = simplex_maximize(a2_new, A_ub, b_ub, bounds)

print("\nИзменение плана выпуска и выручки от продажи при изменении цены на 10%:")
print("План выпуска П1 =", a2_res_new.x[0])
print("План выпуска П2 =", a2_res_new.x[1])
print("Выручка от продажи =", -a2_res_new.fun)

# Б) Изменение плана выпуска и выручки от продажи при увеличении запаса сырья на 10%
b_ub_new = [-0, 0, 110]
b_res_new = simplex_maximize(c, A_ub, b_ub_new, bounds)

print("\nИзменение плана выпуска и выручки от продажи при увеличении запаса сырья на 10%:")
print("План выпуска П1 =", b_res_new.x[0])
print("План выпуска П2 =", b_res_new.x[1])
print("Выручка от продажи =", -b_res_new.fun)














# Для снижения цены продукции на 10%:
# c = [-18, -36] # коэффициенты целевой функции для минимизации
# Для увеличения цены продукции на 10%:
# c = [-22, -44] # коэффициенты целевой функции для минимизации
# Для увеличения суточного запаса сырья на 10%:
# b = [-0.4, -110] # правая часть ограничений
# Теневая цена дополнительного сырья будет равна
# изменению значения целевой функции при увеличении правой
# части соответствующего ограничения на единицу.

